#compdef bosh

# --------------
# ----- Commands
# --------------

__version() {
  # no arguments
}

_bosh_main_functions()
{
  local -a _arg
  IFS=$'\n' _arg=($(bosh help | \
    tr -s "[:space:]" | \
    sed -e "1,/^Available commands:/d" \
        -e "s/[[:space:]]https:\/\/bosh\.io.*$//" \
        -e "s/^[[:space:]]*\([^[:space:]]*\)[[:space:]]*\(.*\)/\1:\2/"))
  
  _describe -t commands "bosh command" _arg
  return
}

_delete-deployment()
{
  [ "$words[2]" != "-d" ] && compadd -Q "$@" -- "-d" && return 
 
  local -a _list
  _list=(
  $(bosh deployments --json | jq -r ".Tables[].Rows[].name")
  )
  _describe -t commands "bosh delete-deployment" _list
  return
}

_delete-release()
{
  local -a _releases_list
  _releases_list=(
  $(bosh releases --json| jq -r '.Tables[].Rows[]|.name+"/"+.version')
  )

  _describe -t commands "bosh delete-release" _releases_list
  return
}

_ssh()
{
  [ "$words[2]" != "-d" ] && compadd -Q "$@" -- "-d" && return

  if [[ -z ${words[3]} ]]
  then
    local -a _list
    _list=(
      $(bosh deployments --json | jq -r ".Tables[].Rows[].name")
    )
    _describe -t commands "bosh ssh" _list
    return
  fi

  local -a _vms_list
  IFS=$'\n' _vms_list=(
    $(bosh -d $words[3] vms --json| jq -r '.Tables[].Rows[]|.instance+":"+.ips')
    )
  _describe -t commands "bosh ssh" _vms_list
  return
}

_bosh()
{
  _arguments '*:: :->command'
  ok="ssh delete-release delete-deployment"
  if (( CURRENT==1 )); then
    #_bosh_main_arguments=$( _bosh_main_functions )
     _bosh_main_functions
     return
  elif [ -z "${ok##*$words[1]*}" ]; then
    eval _${words[1]} 
  else
    _files
  fi

#  local -a _command_args
#  case "$words[1]" in
#    version)
#      __version ;;
#  esac
}

_bosh "$@"